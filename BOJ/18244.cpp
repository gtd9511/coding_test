#include <iostream>
#include <string.h>
using namespace std;

int N , dp[101][10][4], ans = 0;
// 0 > 2번 감소 // 1감소
// 1 > 1번 감소 // 2증가 1증가
// 2 > 1번 증가 // 2감소 1감소
// 3 > 2번 증가 // 1증가
int main()
{
	cin >> N;
	memset(dp, 0, sizeof(dp));

	for (int i = 1; i < 3; i++)
		for (int j = 0; j < 10; j++)
			dp[2][j][i] = 1;

	dp[2][0][2] = 0;
	dp[2][9][1] = 0;

	for (int i = 3; i < N + 1; i++)
	{
		for (int j = 0; j < 10; j++)
		{
			if (j == 0)
			{
				dp[i][j][0] = dp[i - 1][1][1];
				dp[i][j][1] = dp[i - 1][1][2];
			}
			else if (j == 9)
			{
				dp[i][j][2] = dp[i - 1][8][1];
				dp[i][j][3] = dp[i - 1][8][2];
			}
			else
			{
				dp[i][j][0] = dp[i - 1][j + 1][1];
				dp[i][j][1] = dp[i - 1][j + 1][2] + dp[i - 1][j + 1][3];
				dp[i][j][2] = dp[i - 1][j - 1][0] + dp[i - 1][j - 1][1];
				dp[i][j][3] = dp[i - 1][j - 1][2];
			}
			dp[i][j][0] %= 1000000007;
			dp[i][j][1] %= 1000000007;
			dp[i][j][2] %= 1000000007;
			dp[i][j][3] %= 1000000007;
		}
	}
	if (N == 1)
	{
		cout << 10;
		return (0);
	}

	for (int i = 0; i < 10; i++)
	{
		for (int j = 0; j < 4; j++)
		{
			ans += dp[N][i][j];
			ans %= 1000000007;
		}
	}
	cout << ans;
	return (0);
}

//	0	1	2	3	4	5	6	7	8	9
//	1	1	1	1	1	1	1	1	1	1	10	1
//	1	2	2	2	2	2	2	2	2	1	18	2
//	2	3	4	4	4	4	4	4	3	2	34	3
//	3	6	7	8	8	8	8	7	6	3	64	4
//	6	10	14	15	16	16	15	14	10	6

//	2	5	6	6	6	6	6	6	5	2	50 4

//	0	0	0	0	0	0	0	0	0	0
//	1	1	1	2	2	2	2	1	1	1
//	2	3	4	5	6	6	5	4	3	2

//	4	7	10	10	10	10	10	10	7	4
//	4	8	12	12	12	12	12	12	8	4
// 16 - 2 - 2 - 2


